// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// c_Xtilde
List c_Xtilde(arma::mat Xstar, arma::vec groups, int G, int n);
RcppExport SEXP _SSGL615_c_Xtilde(SEXP XstarSEXP, SEXP groupsSEXP, SEXP GSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xstar(XstarSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(c_Xtilde(Xstar, groups, G, n));
    return rcpp_result_gen;
END_RCPP
}
// c_betaSD
arma::mat c_betaSD(arma::mat Xstar, arma::vec groups, arma::vec beta, List Qmat, List Dvec, int G, int n);
RcppExport SEXP _SSGL615_c_betaSD(SEXP XstarSEXP, SEXP groupsSEXP, SEXP betaSEXP, SEXP QmatSEXP, SEXP DvecSEXP, SEXP GSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xstar(XstarSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< List >::type Qmat(QmatSEXP);
    Rcpp::traits::input_parameter< List >::type Dvec(DvecSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(c_betaSD(Xstar, groups, beta, Qmat, Dvec, G, n));
    return rcpp_result_gen;
END_RCPP
}
// c_Xstar
arma::mat c_Xstar(arma::mat Xs);
RcppExport SEXP _SSGL615_c_Xstar(SEXP XsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xs(XsSEXP);
    rcpp_result_gen = Rcpp::wrap(c_Xstar(Xs));
    return rcpp_result_gen;
END_RCPP
}
// c_betainact
arma::uvec c_betainact(arma::vec beta, arma::uvec active);
RcppExport SEXP _SSGL615_c_betainact(SEXP betaSEXP, SEXP activeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type active(activeSEXP);
    rcpp_result_gen = Rcpp::wrap(c_betainact(beta, active));
    return rcpp_result_gen;
END_RCPP
}
// psi
double psi(NumericVector beta, double lambda);
RcppExport SEXP _SSGL615_psi(SEXP betaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(psi(beta, lambda));
    return rcpp_result_gen;
END_RCPP
}
// pStar
double pStar(NumericVector beta, double lambda1, double lambda0, double theta);
RcppExport SEXP _SSGL615_pStar(SEXP betaSEXP, SEXP lambda1SEXP, SEXP lambda0SEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(pStar(beta, lambda1, lambda0, theta));
    return rcpp_result_gen;
END_RCPP
}
// c_gFunc
double c_gFunc(NumericVector beta, double lambda1, double lambda0, double theta, double sigmasq, double n);
RcppExport SEXP _SSGL615_c_gFunc(SEXP betaSEXP, SEXP lambda1SEXP, SEXP lambda0SEXP, SEXP thetaSEXP, SEXP sigmasqSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigmasq(sigmasqSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(c_gFunc(beta, lambda1, lambda0, theta, sigmasq, n));
    return rcpp_result_gen;
END_RCPP
}
// update
List update(arma::vec Y, arma::mat Xtilde, arma::vec groups, LogicalVector& updateSigma, double sigmasq, arma::vec betaa, double intercept, double lambda0_base, double lambda1, double lambda0, arma::vec betaOld, double a, double b, int M, LogicalVector Z, double theta, int G, IntegerVector forceGroups, double n);
RcppExport SEXP _SSGL615_update(SEXP YSEXP, SEXP XtildeSEXP, SEXP groupsSEXP, SEXP updateSigmaSEXP, SEXP sigmasqSEXP, SEXP betaaSEXP, SEXP interceptSEXP, SEXP lambda0_baseSEXP, SEXP lambda1SEXP, SEXP lambda0SEXP, SEXP betaOldSEXP, SEXP aSEXP, SEXP bSEXP, SEXP MSEXP, SEXP ZSEXP, SEXP thetaSEXP, SEXP GSEXP, SEXP forceGroupsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtilde(XtildeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< LogicalVector& >::type updateSigma(updateSigmaSEXP);
    Rcpp::traits::input_parameter< double >::type sigmasq(sigmasqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betaa(betaaSEXP);
    Rcpp::traits::input_parameter< double >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< double >::type lambda0_base(lambda0_baseSEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda0(lambda0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betaOld(betaOldSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type forceGroups(forceGroupsSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(update(Y, Xtilde, groups, updateSigma, sigmasq, betaa, intercept, lambda0_base, lambda1, lambda0, betaOld, a, b, M, Z, theta, G, forceGroups, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SSGL615_c_Xtilde", (DL_FUNC) &_SSGL615_c_Xtilde, 4},
    {"_SSGL615_c_betaSD", (DL_FUNC) &_SSGL615_c_betaSD, 7},
    {"_SSGL615_c_Xstar", (DL_FUNC) &_SSGL615_c_Xstar, 1},
    {"_SSGL615_c_betainact", (DL_FUNC) &_SSGL615_c_betainact, 2},
    {"_SSGL615_psi", (DL_FUNC) &_SSGL615_psi, 2},
    {"_SSGL615_pStar", (DL_FUNC) &_SSGL615_pStar, 4},
    {"_SSGL615_c_gFunc", (DL_FUNC) &_SSGL615_c_gFunc, 6},
    {"_SSGL615_update", (DL_FUNC) &_SSGL615_update, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_SSGL615(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
